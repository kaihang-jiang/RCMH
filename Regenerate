function [B] =Regenerate(XKTrain,YKTrain,LTrain,U,param)
    cbits = param.cbits;
    pace = 0.005; %0.005 for IAPRTC NUSWIDE and MSCOCO, 0.05 for MIRFLICRK 
    muta = 10;
    [d1,n] = size(XKTrain);
    d2 = size(YKTrain,1);
    H_2 = randn(cbits,d2);
    tic;
    [E] = label_enhance(XKTrain, YKTrain, LTrain, param);  
    D = diag(randn(d1,1));
    if nbits>=cbits
        B = U(1:cbits,:);
    else
        B1 = sign(randn(cbits-nbits,n));
        B = [U;B1];
    end
%% initial
  

    for j = 1:4
        V = (cbits*B*E'*E)';
        Temp = V'*V-1/n*(V'*ones(n,1)*(ones(1,n)*V));
        [~,Lmd,RR] = svd(Temp);
        idx = (diag(Lmd)>1e-6);
        R = RR(:,idx); R_ = orth(RR(:,~idx));
        P = (V-1/n*ones(n,1)*(ones(1,n)*V)) *  (R / (sqrt(Lmd(idx,idx))));
        P_ = orth(randn(n,cbits-length(find(idx==1))));
        V = (sqrt(n)*[P P_]*[R R_]')'; 
        clear idx RR Lmd Temp

        [U1,~,V1] = svd(U*B','econ');
        Q = U1*V1';

        B = sign(cbits*V*E'*E+muta*Q'*U);
    end 

     %% 
     [~,~,Y] = svd([XKTrain],'econ');
     % update W_t
     [C_1,~,F_1] = svd(D*Y'*V','econ'); 
     W_1 = C_1*F_1';

     %update E_t
        J_1 = Y'; 
        K_1 =W_1 *V;
        for j = 1:d1
            if norm(J_1(j,:))~=0 && norm(K_1(j,:))~=0
            e_1(j) = J_1(j,:)*K_1(j,:)'/(norm(J_1(j,:))*norm(K_1(j,:)));
            else
            e_1(j) = J_1(j,:)*K_1(j,:)';
            end
        end

        a = mean(e_1);
        e_1(e_1>=a) = 1;
        e_1(e_1<a) = -1;    
        D =diag(e_1);
        
     for iter = 1:5
        deriva_2  = -((V-tanh(H_2*YKTrain))).*(ones(cbits, n)-tanh(H_2*YKTrain).*tanh(H_2*YKTrain))*YKTrain';
        H_2 = H_2- pace*deriva_2;
     end

     Bx = sign(W_1'*D*Y');
     By = sign(H_2*YKTrain);
     Ds1 = sum(Bx.*V,1);
     Ds2 = sum(By.*V,1);
     R1 = zeros(n,1);
     R1(Ds1>Ds2)=1;
     R1(Ds1<=Ds2)=0;
     R2 = ones(n,1)-R1;
     V_m = (Bx.*R1'+By.*R2');  
     [U1,~,V1] = svd(U*B','econ');
     Q = U1*V1';
     
     B = sign((V_m*V_m'+(muta)*eye(cbits))\(cbits*((V_m)*E')*E+ muta*Q'* U));
     B(B==0)=-1;

end
